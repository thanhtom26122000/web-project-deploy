[{"D:\\Study\\web-project-js\\client\\src\\components\\ControlTab.js":"1","D:\\Study\\web-project-js\\client\\src\\components\\AddProperty.js":"2","D:\\Study\\web-project-js\\client\\src\\ConfigInput.js":"3","D:\\Study\\web-project-js\\client\\src\\components\\ButtonCustom.js":"4","D:\\Study\\web-project-js\\client\\src\\components\\Header.js":"5","D:\\Study\\web-project-js\\client\\src\\components\\Profile.js":"6","D:\\Study\\web-project-js\\client\\src\\components\\ListItem.js":"7","D:\\Study\\web-project-js\\client\\src\\pages\\Account.js":"8","D:\\Study\\web-project-js\\client\\src\\components\\Favorites.js":"9","D:\\Study\\web-project-js\\client\\src\\index.js":"10","D:\\Study\\web-project-js\\client\\src\\reportWebVitals.js":"11","D:\\Study\\web-project-js\\client\\src\\App.js":"12","D:\\Study\\web-project-js\\client\\src\\pages\\LandingPage.js":"13","D:\\Study\\web-project-js\\client\\src\\components\\ControlTabItem.js":"14","D:\\Study\\web-project-js\\client\\src\\Config.js":"15","D:\\Study\\web-project-js\\client\\src\\components\\PrivateRoute.js":"16","D:\\Study\\web-project-js\\client\\src\\pages\\SignIn.js":"17","D:\\Study\\web-project-js\\client\\src\\pages\\SignUp.js":"18","D:\\Study\\web-project-js\\client\\src\\redux\\actions\\auth.js":"19","D:\\Study\\web-project-js\\client\\src\\redux\\actions\\type.js":"20","D:\\Study\\web-project-js\\client\\src\\redux\\store.js":"21","D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\index.js":"22","D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\index.js":"23","D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\user.js":"24","D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\auth.js":"25","D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\auth.js":"26","D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\user.js":"27","D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\admin.js":"28","D:\\Study\\web-project-js\\client\\src\\redux\\actions\\user.js":"29","D:\\Study\\web-project-js\\client\\src\\redux\\actions\\action.js":"30","D:\\Study\\web-project-js\\client\\src\\axios\\index.js":"31","D:\\Study\\web-project-js\\client\\src\\components\\AuthRoute.js":"32","D:\\Study\\web-project-js\\client\\src\\components\\Modal.js":"33"},{"size":1141,"mtime":1607951405739,"results":"34","hashOfConfig":"35"},{"size":12873,"mtime":1608377603362,"results":"36","hashOfConfig":"35"},{"size":32225,"mtime":1608580891685,"results":"37","hashOfConfig":"35"},{"size":450,"mtime":1608581989923,"results":"38","hashOfConfig":"35"},{"size":1295,"mtime":1607978220948,"results":"39","hashOfConfig":"35"},{"size":6039,"mtime":1608582036942,"results":"40","hashOfConfig":"35"},{"size":6683,"mtime":1608292271946,"results":"41","hashOfConfig":"35"},{"size":1266,"mtime":1608361125303,"results":"42","hashOfConfig":"35"},{"size":261,"mtime":1607978956326,"results":"43","hashOfConfig":"35"},{"size":699,"mtime":1608572547075,"results":"44","hashOfConfig":"35"},{"size":409,"mtime":1607951253564,"results":"45","hashOfConfig":"35"},{"size":1547,"mtime":1608574987597,"results":"46","hashOfConfig":"35"},{"size":5054,"mtime":1608556662652,"results":"47","hashOfConfig":"35"},{"size":806,"mtime":1608360978242,"results":"48","hashOfConfig":"35"},{"size":89,"mtime":1608572635465,"results":"49","hashOfConfig":"35"},{"size":358,"mtime":1608574777080,"results":"50","hashOfConfig":"35"},{"size":4703,"mtime":1608573100236,"results":"51","hashOfConfig":"35"},{"size":6229,"mtime":1608570019857,"results":"52","hashOfConfig":"35"},{"size":251,"mtime":1608384238641,"results":"53","hashOfConfig":"35"},{"size":1516,"mtime":1608384238645,"results":"54","hashOfConfig":"35"},{"size":466,"mtime":1608572506647,"results":"55","hashOfConfig":"35"},{"size":227,"mtime":1608572111836,"results":"56","hashOfConfig":"35"},{"size":312,"mtime":1608572597047,"results":"57","hashOfConfig":"35"},{"size":1267,"mtime":1608384239158,"results":"58","hashOfConfig":"35"},{"size":1087,"mtime":1608576905457,"results":"59","hashOfConfig":"35"},{"size":543,"mtime":1608574496338,"results":"60","hashOfConfig":"35"},{"size":639,"mtime":1608581068965,"results":"61","hashOfConfig":"35"},{"size":726,"mtime":1608384238984,"results":"62","hashOfConfig":"35"},{"size":650,"mtime":1608384238647,"results":"63","hashOfConfig":"35"},{"size":46,"mtime":1608384238634,"results":"64","hashOfConfig":"35"},{"size":844,"mtime":1608572643990,"results":"65","hashOfConfig":"35"},{"size":346,"mtime":1608573391302,"results":"66","hashOfConfig":"35"},{"size":755,"mtime":1608574322403,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"7pjqhb",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Study\\web-project-js\\client\\src\\components\\ControlTab.js",[],["142","143"],"D:\\Study\\web-project-js\\client\\src\\components\\AddProperty.js",["144"],"import { Card, CardActionArea, CardMedia, Checkbox, FormControl, FormControlLabel, Grid, InputLabel, makeStyles, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigInput from \"../ConfigInput\";\r\nimport ButtonCustom from \"./ButtonCustom\";\r\nimport addFile from \"../resources/images/add-file.svg\"\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        \"& .MuiOutlinedInput-root\": {\r\n            borderRadius: \"10px\"\r\n        },\r\n        marginBottom: \"32px\",\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    rightTabContainer: {\r\n        padding: \"40px !important\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"20px\",\r\n    }\r\n})\r\nconst AddProperty = () => {\r\n    const classes = useStyles()\r\n    const [input, setInput] = useState({\r\n        state: \"\",\r\n        district: \"\",\r\n        priceHouse: \"\",\r\n        perMonth: \"\",\r\n        priceElectric: \"\",\r\n        priceWater: \"\",\r\n        type: \"\"\r\n    })\r\n    console.log(\"xxxx\", input)\r\n    const handleOnChange = (event, field, value) => {\r\n        setInput({\r\n            ...input,\r\n            [field]: (field === \"state\" || field === \"district\") ? value : event.target.value\r\n        })\r\n    }\r\n    return (\r\n        <form>\r\n            <div style={{ padding: \"20px 40px 0px 40px\" }}>\r\n                <h2 style={{ fontWeight: \"bold\", fontSize: \"40px\" }}>Cho thuê nhà</h2>\r\n                <Grid container spacing={6} style={{ display: \"flex\" }}>\r\n                    <Grid item xs={7} className={classes.rightTabContainer}>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500 }}>Thông tin nhà cho thuê</div>\r\n                        <Grid container>\r\n                            {ConfigInput.propertyDescriptionInput.map(el => (\r\n                                <Grid item xs={12} key={el.label}>\r\n                                    <TextField variant=\"outlined\"\r\n                                        label={el.label}\r\n                                        type={el.type}\r\n                                        className={classes.textField}\r\n                                        multiline={el.label === \"Miêu tả\" ? true : false}\r\n                                        rows={el.label === \"Miêu tả\" ? 8 : 1}\r\n                                        style={{ width: \"95%\" }}>\r\n                                    </TextField>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500 }}>Thông tin nhà cho thuê</div>\r\n                        <Grid container>\r\n                            {ConfigInput.propertyPrice.map((el) => (\r\n                                <Grid item xs={6} key={el.label}>\r\n                                    {el.type === \"select\" ? (\r\n                                        <FormControl variant=\"outlined\" style={{ width: \"90%\" }}>\r\n                                            <InputLabel id={el.label}>{el.label}</InputLabel>\r\n                                            <Select\r\n                                                value={input[el.nameState]}\r\n                                                onChange={(event) => handleOnChange(event, el.nameState)}\r\n                                                labelId={el.label}\r\n                                                label={el.label}\r\n                                                defaultValue=\"\"\r\n                                                style={{ borderRadius: \"10px\" }}>\r\n                                                {el.value?.map(value => {\r\n                                                    return (\r\n                                                        <MenuItem key={value} value={value}>{value}</MenuItem>\r\n                                                    )\r\n                                                })}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    ) :\r\n                                        (<TextField variant=\"outlined\"\r\n                                            label={el.label}\r\n                                            type={el.type}\r\n                                            className={classes.textField}\r\n                                            style={{ width: \"90%\" }}>\r\n                                        </TextField>)\r\n                                    }\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500, marginTop: \"20px\" }}>Chọn loại</div>\r\n                        <Grid container>\r\n                            <Grid item xs={6}>\r\n                                <Autocomplete\r\n                                    options={ConfigInput.listState}\r\n                                    inputValue={input.state}\r\n                                    onInputChange={(event, value) => handleOnChange(event, \"state\", value)}\r\n                                    renderInput={(params) => <TextField  {...params} className={classes.textField} style={{ width: \"90%\" }} label=\"Tỉnh\" variant=\"outlined\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Autocomplete\r\n                                    options={ConfigInput.mapDistrict[input.state] ? ConfigInput.mapDistrict[input.state] : []}\r\n                                    inputValue={input.district}\r\n                                    onInputChange={(event, value) => handleOnChange(event, \"district\", value)}\r\n                                    renderInput={(params) => <TextField {...params} className={classes.textField} style={{ width: \"90%\" }} label=\"Quận/Huyện\" variant=\"outlined\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField variant=\"outlined\"\r\n                                    label=\"Địa chỉ chi tiết\"\r\n                                    type=\"text\"\r\n                                    className={classes.textField}\r\n                                    style={{ width: \"90%\" }}>\r\n                                </TextField>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500, marginTop: \"20px\" }}>Chi tiết</div>\r\n                        <Grid container >\r\n                            {ConfigInput.listDetails.map((el) => (\r\n                                <Grid item xs={6} key={el.label}>\r\n                                    {el.type === \"select\" ? (\r\n                                        <FormControl variant=\"outlined\" style={{ width: \"90%\" }}>\r\n                                            <InputLabel id={el.label}>{el.label}</InputLabel>\r\n                                            <Select value={input[el.nameState]} onChange={(event) => handleOnChange(event, el.nameState)} labelId={el.label} label={el.label} style={{ borderRadius: \"10px\" }}>\r\n                                                {el.value?.map(value => {\r\n                                                    return (\r\n                                                        <MenuItem key={value} value={value}>{value}</MenuItem>\r\n                                                    )\r\n                                                })}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    ) :\r\n                                        (<TextField variant=\"outlined\"\r\n                                            label={el.label}\r\n                                            type={el.type}\r\n                                            className={classes.textField}\r\n                                            style={{ width: \"90%\" }}>\r\n                                        </TextField>)\r\n                                    }\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500, marginTop: \"20px\" }}>Tiện nghi</div>\r\n                        <Grid container >\r\n                            {ConfigInput.features.map((el) => (\r\n                                <Grid item xs={3} key={el.label}>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                name=\"checkedB\"\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label={el.label}\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500, marginTop: \"20px\" }}>Chú thích của bạn</div>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <TextField variant=\"outlined\"\r\n                                    label=\"Chú thích\"\r\n                                    type=\"text\"\r\n                                    className={classes.textField}\r\n                                    multiline={true}\r\n                                    rows={10}\r\n                                    style={{ width: \"95%\" }}>\r\n                                </TextField>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <ButtonCustom>Save</ButtonCustom>\r\n                    </Grid>\r\n                    <Grid item xs={5} style={{ padding: \"0px 24px\" }}>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            // multiple={typeAdd === \"single\" ? false : true}\r\n                            type=\"file\"\r\n                        // onChange={(event) => {\r\n                        //     typeAdd === \"single\" ? setInput({ ...input, image: event.target.files[0] }) : setInput({ ...input, image: Object.values(event.target.files) })\r\n                        // }}\r\n                        />\r\n                        <Card style={{ borderRadius: \"20px\" }}>\r\n                            <CardActionArea style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\" }}>\r\n                                <label htmlFor=\"contained-button-file\">\r\n                                    <div style={{ fontSize: \"16px\", padding: \"20px\", borderBottom: \"1px solid #0000001f\", }}>Tải ảnh lên</div>\r\n                                    <CardMedia style={{ padding: \"20px\", maxWidth: \"90%\", marginLeft: \"auto\", marginRight: \"auto\", boxSizing: \"border-box\" }} >\r\n                                        <div style={{ display: \"flex\", border: \"1px dashed #0000001f\", padding: \"20px\" }}>\r\n                                            <img src={addFile} height=\"100px\" alt=\"add-image-icon\"></img>\r\n                                            <div >\r\n                                                <div style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>Chọn ảnh</div>\r\n                                                <div>Thả ảnh vào đây hoặc là ấn vào đây để chọn ảnh từ máy của bạn</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </CardMedia>\r\n                                </label>\r\n                                <span style={{ fontSize: \"14px\", marginLeft: \"40px\", marginBottom: \"16px\" }}>Chú thích : Bạn phải đăng ít nhất 3 ảnh </span>\r\n\r\n                                {/* {input.image ? <div style={{ margin: \"20px 40px\", display: \"flex\", flexDirection: \"column\" }}>{typeAdd === \"single\" ? input.image.name : (input.image.length > 0 ? input.image.map(el => <div key={el.name} style={{ marginTop: \"16px\" }}>{el.name}</div>) : null)}</div> : null} */}\r\n                            </CardActionArea>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default AddProperty","D:\\Study\\web-project-js\\client\\src\\ConfigInput.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\ButtonCustom.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\Header.js",["145"],"import React from \"react\";\r\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nconst useStyles = makeStyles({\r\n    countNotify: {\r\n        position: \"absolute\",\r\n        top: \"-8px\",\r\n        right: \"-4px\",\r\n        fontSize: \"16px\",\r\n        backgroundColor: \"#ae8c63\",\r\n        color: \"white\",\r\n        borderRadius: \"50%\",\r\n        width: \"26px\",\r\n        height: \"26px\",\r\n        textAlign: \"center\",\r\n    }\r\n})\r\nconst Header = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div style={{ display: \"flex\", padding: \"20px 60px\", backgroundColor: \"#fff\" }}>\r\n            <div>\r\n                <img src=\"https://demo5.wpresidence.net/wp-content/uploads/2020/07/demo5_black.png\" alt=\"12\"></img>\r\n            </div>\r\n            <div style={{ display: \"flex\", marginLeft: \"auto\", marginRight: \"20px\", alignItems: \"center\", position: \"relative\", cursor: \"pointer\" }}>\r\n                <div className={classes.countNotify}>1</div>\r\n                <img src=\"https://demo5.wpresidence.net/wp-content/themes/wpresidence/img/default_user_small.png\" alt=\"avatar\" style={{ borderRadius: \"50%\", border: \"1px solid red\" }}></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Header","D:\\Study\\web-project-js\\client\\src\\components\\Profile.js",["146"],"D:\\Study\\web-project-js\\client\\src\\components\\ListItem.js",[],"D:\\Study\\web-project-js\\client\\src\\pages\\Account.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\Favorites.js",[],"D:\\Study\\web-project-js\\client\\src\\index.js",[],"D:\\Study\\web-project-js\\client\\src\\reportWebVitals.js",["147"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","D:\\Study\\web-project-js\\client\\src\\App.js",[],"D:\\Study\\web-project-js\\client\\src\\pages\\LandingPage.js",["148","149"],"import { Container, makeStyles, Grid, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"../resources/scss/landing-page.scss\";\r\nimport logo from \"../resources/images/logo.png\"\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ListItem from \"../components/ListItem\";\r\nimport { useHistory } from \"react-router\";\r\nconst useStyles = makeStyles({\r\n    accountIcon: {\r\n        color: \"white\",\r\n        fontSize: \"30px\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\": {\r\n            opacity: \"0.6\"\r\n        }\r\n    },\r\n    containerNavigation: {\r\n        display: \"flex\",\r\n        position: \"relative\",\r\n        padding: \"20px\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    logo: {\r\n        cursor: \"pointer\"\r\n    },\r\n    gridContainer: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"100px\",\r\n        backgroundColor: \"transparent\"\r\n    },\r\n    select: {\r\n        minWidth: \"200px\"\r\n    }\r\n})\r\nconst LandingPage = ({ }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    return (\r\n        <div style={{ backgroundColor: \"#f7f7f7\" }}>\r\n            <header className=\"header\">\r\n                <div className=\"image-opacity\"></div>\r\n                <Container>\r\n                    <div className={classes.containerNavigation}>\r\n                        <img src={logo} alt=\"logo\" className={classes.logo}></img>\r\n                        <AccountCircleIcon onClick = {() => history.push(\"/sign-in\")} className={classes.accountIcon}></AccountCircleIcon>\r\n                    </div>\r\n                </Container >\r\n                <div className=\"header-title\">\r\n                    <h1>Find the Perfect Home</h1>\r\n                    <span>stop looking. start finding with wpresidence</span>\r\n                </div>\r\n            </header>\r\n            <Container style={{ marginTop: \"20px\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <FormControl variant=\"outlined\" style={{ margin: \"8px\" }}>\r\n                    <InputLabel id=\"demo-simple-select-required-label-1\">Quận</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-required-label-1\"\r\n                        // value={age}\r\n                        // onChange={handleChange}\r\n                        label=\"Quận\"\r\n                        className={classes.select}\r\n                    >\r\n                        <MenuItem value={10}>Ten</MenuItem>\r\n                        <MenuItem value={20}>Twenty</MenuItem>\r\n                        <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={{ margin: \"8px\" }}>\r\n                    <InputLabel id=\"demo-simple-select-required-label-2\">Huyện</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-required-label-2\"\r\n                        // value={age}\r\n                        // onChange={handleChange}\r\n                        label=\"Huyện\"\r\n                        className={classes.select}\r\n\r\n                    >\r\n                        <MenuItem value={10}>Ten</MenuItem>\r\n                        <MenuItem value={20}>Twenty</MenuItem>\r\n                        <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={{ margin: \"8px\" }}>\r\n                    <InputLabel id=\"demo-simple-select-required-label-3\">Loại</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-required-label-3\"\r\n                        // value={age}\r\n                        // onChange={handleChange}\r\n                        label=\"Loại\"\r\n                        className={classes.select}\r\n                    >\r\n                        <MenuItem value={10}>Ten</MenuItem>\r\n                        <MenuItem value={20}>Twenty</MenuItem>\r\n                        <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={{ margin: \"8px\" }} >\r\n                    <InputLabel id=\"demo-simple-select-required-label-3\">Số giường ngủ</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-required-label-3\"\r\n                        // value={age}\r\n                        // onChange={handleChange}\r\n                        label=\"Số giường ngủ\"\r\n                        className={classes.select}\r\n                    >\r\n                        <MenuItem value={10}>Ten</MenuItem>\r\n                        <MenuItem value={20}>Twenty</MenuItem>\r\n                        <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Container>\r\n            <ListItem></ListItem>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default LandingPage ","D:\\Study\\web-project-js\\client\\src\\components\\ControlTabItem.js",[],"D:\\Study\\web-project-js\\client\\src\\Config.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\PrivateRoute.js",[],"D:\\Study\\web-project-js\\client\\src\\pages\\SignIn.js",[],"D:\\Study\\web-project-js\\client\\src\\pages\\SignUp.js",["150","151"],"import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n// import '../resources/scss/auth.css'\r\nimport { TextField, makeStyles, InputAdornment, IconButton, Checkbox, FormControlLabel, Button } from '@material-ui/core';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useHistory } from 'react-router';\r\nconst useStyle = makeStyles({\r\n    textField: {\r\n        marginRight: \"16px\",\r\n        width: \"calc((100% - 16px)/2)\"\r\n    },\r\n    buttonGoogle: {\r\n        border: \"1px solid #908e8e\",\r\n        marginBottom: \"8px\"\r\n    },\r\n    rootSignUp: {\r\n        width: \"400px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        margin: \"120px auto\",\r\n    },\r\n    circle: {\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n        backgroundColor: \"rgb(220, 0, 78)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: \"50%\"\r\n    },\r\n    lockIcon: {\r\n        width: \"24px\",\r\n        height: \"24px\",\r\n        color: \"white\",\r\n    },\r\n    rootSignIn: {\r\n        width: \"400px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        margin: \"120px auto\",\r\n    }\r\n})\r\nconst SignUp = () => {\r\n    const classes = useStyle();\r\n    const history = useHistory();\r\n    const [showPass, setShowPass] = useState(false);\r\n    const [input, setInput] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n    })\r\n    const [error, setError] = useState({\r\n        errorMessage: \"\",\r\n        type: \"\"\r\n    })\r\n    console.log(\"xxxxx \", error)\r\n    const handleOnChangeInput = (event, field) => {\r\n        if (error.type.length > 0) {\r\n            setError({\r\n                errorMessage: \"\",\r\n                type: \"\"\r\n            })\r\n        }\r\n        setInput({\r\n            ...input,\r\n            [field]: event.target.value\r\n        })\r\n\r\n    }\r\n    const handleResign = () => {\r\n        return axios.post(\"http://localhost:8080/api/user/sign-up\", input)\r\n            .then((res) => {\r\n                console.log(\"xxxxx status\", res.data)\r\n                if (res.status === 200) {\r\n                    history.push(\"/sign-in\");\r\n                    window.location.reload()\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"fucking error\", err.response)\r\n                if (err.response.status === 400) {\r\n                    return setError({\r\n                        errorMessage: err.response.data.errorMessage,\r\n                        type: err.response.data.errorType\r\n                    })\r\n                }\r\n            })\r\n\r\n    }\r\n    const handleClickShowPass = () => {\r\n        setShowPass(!showPass)\r\n    }\r\n    return (\r\n        <div className={classes.rootSignUp}>\r\n            <div className={classes.circle}>\r\n                <LockOutlinedIcon className={classes.lockIcon}></LockOutlinedIcon>\r\n            </div>\r\n            <h1 style={{ marginTop: \"8px\", fontSize: \"24px\", fontWeight: 400, color: \"\" }}>Sign Up</h1>\r\n            <div style={{ marginBottom: \"24px\", display: \"flex\", width: \"100%\" }}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Họ\"\r\n                    type=\"text\"\r\n                    className={classes.textField}\r\n                    onChange={(event) => handleOnChangeInput(event, \"firstName\")}\r\n                    error={error.type === \"firstName\" ? true : false}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Tên\"\r\n                    type=\"text\"\r\n                    style={{ width: \"calc((100% - 16px)/2)\" }}\r\n                    onChange={(event) => handleOnChangeInput(event, \"lastName\")}\r\n                    error={error.type === \"lastName\" ? true : false}\r\n                />\r\n            </div>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                fullWidth={true}\r\n                label=\"Tên đăng nhập\"\r\n                type=\"text\"\r\n                style={{ marginBottom: \"24px\" }}\r\n                onChange={(event) => handleOnChangeInput(event, \"username\")}\r\n                error={error.type === \"username\" ? true : false}\r\n            />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                fullWidth={true}\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                style={{ marginBottom: \"24px\" }}\r\n                onChange={(event) => handleOnChangeInput(event, \"email\")}\r\n                error={error.type === \"email\" ? true : false}\r\n            />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                fullWidth={true}\r\n                label=\"Mật Khẩu\"\r\n                type={showPass ? \"text\" : \"password\"}\r\n                style={{ marginBottom: \"16px\" }}\r\n                onChange={(event) => handleOnChangeInput(event, \"password\")}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={() => handleClickShowPass()}>\r\n                                {showPass ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n                error={error.type === \"password\" ? true : false}\r\n            />\r\n\r\n            { error.type.length > 0 ? <Alert severity=\"error\" style={{ marginBottom: \"16px\", marginRight: \"auto\", width: \"100%\" }}>{error.errorMessage}</Alert> : null}\r\n            <Button fullWidth={true} variant=\"contained\" color=\"primary\" style={{ marginBottom: \"16px\" }} onClick={() => handleResign()}>SIGN UP</Button>\r\n            <a href=\"/sign-in\" style={{ marginLeft: \"auto\", color: \"#1976d2\", cursor: \"pointer\", textDecoration: \"none\" }}>Đã có tài khoản? Đăng nhập</a>\r\n        </div >\r\n    )\r\n}\r\nexport default SignUp","D:\\Study\\web-project-js\\client\\src\\redux\\actions\\auth.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\actions\\type.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\store.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\index.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\index.js",["152","153"],"import { combineReducers } from \"redux\";\r\nimport authReducer from \"./auth\";\r\nimport userReducer from \"./user\";\r\nimport adminReducer from \"./admin\"\r\nconst rootReducer = combineReducers({\r\n    authReducer: authReducer,\r\n    userReducer: userReducer,\r\n    adminReducer : adminReducer\r\n})\r\nexport default rootReducer","D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\user.js",["154","155"],"import { call, put, take } from 'redux-saga/effects';\r\nimport { callApi } from '../../axios';\r\nimport * as Types from \"../actions/type\"\r\nimport { getAdminInfoSuccess, getUserInfoFailed, getUserInfoSuccess } from '../actions/user';\r\nfunction getUserApi(token) {\r\n    return callApi({ method: \"get\", token: token, checkAuth: true, url: \"/api/user/user-info\" })\r\n}\r\nfunction getAdminInfoApi() {\r\n    return callApi({ url: \"/admin/get-info\" })\r\n}\r\nfunction* getUserSaga() {\r\n    while (true) {\r\n        let action = yield take(Types.GET_USER_INFO);\r\n        try {\r\n            let token = localStorage.getItem(\"_user\");\r\n            let user = yield call(getUserApi, token);\r\n            console.log(\"xxxx user\", user)\r\n            if (user !== \"failed\") {\r\n                yield put(getUserInfoSuccess(user))\r\n            }\r\n        }\r\n        catch (e) {\r\n            yield put(getUserInfoFailed(e))\r\n        }\r\n    }\r\n}\r\nfunction* getAdminInfo() {\r\n    while (true) {\r\n        let action = yield take(Types.GET_ADMIN_INFO);\r\n        try {\r\n            let result = yield call(getAdminInfoApi);\r\n            yield put(getAdminInfoSuccess(result))\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n}\r\nexport const userSaga = [\r\n    getUserSaga(),\r\n    getAdminInfo()\r\n]","D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\auth.js",["156"],"D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\auth.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\user.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\admin.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\actions\\user.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\actions\\action.js",[],"D:\\Study\\web-project-js\\client\\src\\axios\\index.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\AuthRoute.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\Modal.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":195,"column":45,"nodeType":"163","endLine":195,"endColumn":100},{"ruleId":"164","severity":1,"message":"165","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":37},{"ruleId":"168","severity":1,"message":"169","line":41,"column":8,"nodeType":"170","endLine":41,"endColumn":43,"suggestions":"171"},{"ruleId":"164","severity":1,"message":"172","line":1,"column":10,"nodeType":"166","messageId":"167","endLine":1,"endColumn":23},{"ruleId":"164","severity":1,"message":"173","line":1,"column":33,"nodeType":"166","messageId":"167","endLine":1,"endColumn":37},{"ruleId":"174","severity":1,"message":"175","line":36,"column":22,"nodeType":"176","messageId":"177","endLine":36,"endColumn":25},{"ruleId":"164","severity":1,"message":"178","line":5,"column":61,"nodeType":"166","messageId":"167","endLine":5,"endColumn":69},{"ruleId":"164","severity":1,"message":"179","line":5,"column":71,"nodeType":"166","messageId":"167","endLine":5,"endColumn":87},{"ruleId":"164","severity":1,"message":"180","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":19},{"ruleId":"164","severity":1,"message":"181","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":22},{"ruleId":"164","severity":1,"message":"182","line":13,"column":13,"nodeType":"166","messageId":"167","endLine":13,"endColumn":19},{"ruleId":"164","severity":1,"message":"182","line":29,"column":13,"nodeType":"166","messageId":"167","endLine":29,"endColumn":19},{"ruleId":"164","severity":1,"message":"182","line":11,"column":17,"nodeType":"166","messageId":"167","endLine":11,"endColumn":23},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'NotificationsNoneOutlinedIcon' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'input'. Either include it or remove the dependency array. You can also do a functional update 'setInput(i => ...)' if you only need 'input' in the 'setInput' call.","ArrayExpression",["185"],"'ReportHandler' is defined but never used.","'Grid' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'foodReducer' is defined but never used.","'tradingReducer' is defined but never used.","'action' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [getUserInfo, input, userReducer.infoUser]",{"range":"188","text":"189"},[1166,1201],"[getUserInfo, input, userReducer.infoUser]"]