[{"D:\\Study\\web-project-js\\client\\src\\components\\ControlTab.js":"1","D:\\Study\\web-project-js\\client\\src\\components\\AddProperty.js":"2","D:\\Study\\web-project-js\\client\\src\\ConfigInput.js":"3","D:\\Study\\web-project-js\\client\\src\\components\\ButtonCustom.js":"4","D:\\Study\\web-project-js\\client\\src\\components\\Header.js":"5","D:\\Study\\web-project-js\\client\\src\\components\\Profile.js":"6","D:\\Study\\web-project-js\\client\\src\\components\\ListItem.js":"7","D:\\Study\\web-project-js\\client\\src\\pages\\Account.js":"8","D:\\Study\\web-project-js\\client\\src\\components\\Favorites.js":"9","D:\\Study\\web-project-js\\client\\src\\index.js":"10","D:\\Study\\web-project-js\\client\\src\\reportWebVitals.js":"11","D:\\Study\\web-project-js\\client\\src\\App.js":"12","D:\\Study\\web-project-js\\client\\src\\pages\\LandingPage.js":"13","D:\\Study\\web-project-js\\client\\src\\components\\ControlTabItem.js":"14","D:\\Study\\web-project-js\\client\\src\\Config.js":"15","D:\\Study\\web-project-js\\client\\src\\components\\PrivateRoute.js":"16","D:\\Study\\web-project-js\\client\\src\\pages\\SignIn.js":"17","D:\\Study\\web-project-js\\client\\src\\pages\\SignUp.js":"18","D:\\Study\\web-project-js\\client\\src\\redux\\actions\\auth.js":"19","D:\\Study\\web-project-js\\client\\src\\redux\\actions\\type.js":"20","D:\\Study\\web-project-js\\client\\src\\redux\\store.js":"21","D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\index.js":"22","D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\index.js":"23","D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\user.js":"24","D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\auth.js":"25","D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\auth.js":"26","D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\user.js":"27","D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\admin.js":"28","D:\\Study\\web-project-js\\client\\src\\redux\\actions\\user.js":"29","D:\\Study\\web-project-js\\client\\src\\redux\\actions\\action.js":"30","D:\\Study\\web-project-js\\client\\src\\axios\\index.js":"31","D:\\Study\\web-project-js\\client\\src\\components\\AuthRoute.js":"32","D:\\Study\\web-project-js\\client\\src\\components\\Modal.js":"33","D:\\Study\\web-project-js\\client\\src\\components\\AlertDialog.js":"34","D:\\Study\\web-project-js\\client\\src\\utils.js":"35","D:\\Study\\web-project-js\\client\\src\\components\\ListProperty.js":"36","D:\\Study\\web-project-js\\client\\src\\redux\\actions\\realEstate.js":"37","D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\realEstate.js":"38","D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\realEstate.js":"39","D:\\Study\\web-project-js\\client\\src\\components\\Icons.js":"40","D:\\Study\\web-project-js\\client\\src\\components\\CustomTable.js":"41","D:\\Study\\web-project-js\\client\\src\\components\\ListAccount.js":"42"},{"size":1710,"mtime":1608759628558,"results":"43","hashOfConfig":"44"},{"size":17058,"mtime":1608741999058,"results":"45","hashOfConfig":"44"},{"size":32849,"mtime":1608759966179,"results":"46","hashOfConfig":"44"},{"size":487,"mtime":1608630276161,"results":"47","hashOfConfig":"44"},{"size":1453,"mtime":1608636526775,"results":"48","hashOfConfig":"44"},{"size":7578,"mtime":1608659346259,"results":"49","hashOfConfig":"44"},{"size":8802,"mtime":1608751468709,"results":"50","hashOfConfig":"44"},{"size":2622,"mtime":1608796678123,"results":"51","hashOfConfig":"44"},{"size":1058,"mtime":1608758255812,"results":"52","hashOfConfig":"44"},{"size":699,"mtime":1608572547075,"results":"53","hashOfConfig":"44"},{"size":409,"mtime":1607951253564,"results":"54","hashOfConfig":"44"},{"size":1595,"mtime":1608759902236,"results":"55","hashOfConfig":"44"},{"size":5431,"mtime":1608801846510,"results":"56","hashOfConfig":"44"},{"size":806,"mtime":1608360978242,"results":"57","hashOfConfig":"44"},{"size":88,"mtime":1608636439195,"results":"58","hashOfConfig":"44"},{"size":433,"mtime":1608636356993,"results":"59","hashOfConfig":"44"},{"size":4703,"mtime":1608573100236,"results":"60","hashOfConfig":"44"},{"size":6229,"mtime":1608570019857,"results":"61","hashOfConfig":"44"},{"size":516,"mtime":1608759158523,"results":"62","hashOfConfig":"44"},{"size":1225,"mtime":1608798505425,"results":"63","hashOfConfig":"44"},{"size":466,"mtime":1608572506647,"results":"64","hashOfConfig":"44"},{"size":300,"mtime":1608742708433,"results":"65","hashOfConfig":"44"},{"size":401,"mtime":1608742681100,"results":"66","hashOfConfig":"44"},{"size":1991,"mtime":1608798974679,"results":"67","hashOfConfig":"44"},{"size":1178,"mtime":1608615936889,"results":"68","hashOfConfig":"44"},{"size":545,"mtime":1608730968166,"results":"69","hashOfConfig":"44"},{"size":1300,"mtime":1608798663093,"results":"70","hashOfConfig":"44"},{"size":726,"mtime":1608384238984,"results":"71","hashOfConfig":"44"},{"size":1045,"mtime":1608798575708,"results":"72","hashOfConfig":"44"},{"size":76,"mtime":1608742518488,"results":"73","hashOfConfig":"44"},{"size":938,"mtime":1608630530960,"results":"74","hashOfConfig":"44"},{"size":346,"mtime":1608573391302,"results":"75","hashOfConfig":"44"},{"size":755,"mtime":1608574322403,"results":"76","hashOfConfig":"44"},{"size":2118,"mtime":1608621737436,"results":"77","hashOfConfig":"44"},{"size":705,"mtime":1608657750414,"results":"78","hashOfConfig":"44"},{"size":1104,"mtime":1608732299154,"results":"79","hashOfConfig":"44"},{"size":1281,"mtime":1608752590179,"results":"80","hashOfConfig":"44"},{"size":1565,"mtime":1608794885317,"results":"81","hashOfConfig":"44"},{"size":2357,"mtime":1608752785260,"results":"82","hashOfConfig":"44"},{"size":498,"mtime":1608745467598,"results":"83","hashOfConfig":"44"},{"size":4846,"mtime":1608797809080,"results":"84","hashOfConfig":"44"},{"size":901,"mtime":1608799026433,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"7pjqhb",{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"89"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"89"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"89"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"89"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"89"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"89"},"D:\\Study\\web-project-js\\client\\src\\components\\ControlTab.js",["183"],"import React from \"react\";\r\nimport { List } from \"@material-ui/core\";\r\nimport ControlTabItem from \"./ControlTabItem\";\r\nimport Config from \"../Config\";\r\nimport ConfigInput from \"../ConfigInput\";\r\nconst ControlTab = ({ image, typeAccount }) => {\r\n\r\n    return (\r\n        <div style={{ marginTop: \"24px\" }}>\r\n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n                <img src={image ? (Config.BASE_URL + \"/api/user\" + image) : \"https://demo5.wpresidence.net/wp-content/themes/wpresidence/img/default_user_small.png\"} alt=\"avatar\" alt=\"avatar-2\" style={{ width: \"60px\", height: \"60px\", borderRadius: \"50%\" }}></img>\r\n                <div style={{ marginTop: \"16px\", fontSize: \"14px\", fontWeight: 500 }}>Welcome back, tienthanh2612!</div>\r\n            </div>\r\n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginTop: \"24px\" }}>\r\n                <List component=\"nav\">\r\n                    {typeAccount === 1 ?\r\n                        (\r\n                            ConfigInput.listControlTabMember.map(el => {\r\n                                return (<ControlTabItem icon={el.icon} name={el.name} key={el.name} path={el.path}></ControlTabItem>)\r\n                            })\r\n                        ) :\r\n                        (\r\n                            ConfigInput.listControlTabAdmin.map(el => {\r\n                                return <ControlTabItem icon={el.icon} name={el.name} key={el.name} path={el.path}></ControlTabItem>\r\n                            })\r\n                        )\r\n                    }\r\n                </List>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ControlTab",["184","185"],"D:\\Study\\web-project-js\\client\\src\\components\\AddProperty.js",["186","187","188","189"],"import { Card, CardActionArea, CardMedia, Checkbox, FormControl, FormControlLabel, Grid, InputLabel, makeStyles, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigInput from \"../ConfigInput\";\r\nimport ButtonCustom from \"./ButtonCustom\";\r\nimport addFile from \"../resources/images/add-file.svg\";\r\nimport { addString, convertNumber } from \"../utils\"\r\nimport { callApi } from \"../axios\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        \"& .MuiOutlinedInput-root\": {\r\n            borderRadius: \"10px\"\r\n        },\r\n        marginBottom: \"32px\",\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    rightTabContainer: {\r\n        padding: \"40px !important\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"20px\",\r\n    }\r\n})\r\nconst AddProperty = ({ status }) => {\r\n    const classes = useStyles()\r\n    const [input, setInput] = useState({\r\n        state: \"\",\r\n        district: \"\",\r\n        price: \"\",\r\n        pricePer: \"\",\r\n        electricPrice: \"\",\r\n        waterPrice: \"\",\r\n        typeRealEstate: \"\",\r\n        size: \"\",\r\n        bedroom: \"\",\r\n        bathroom: \"\",\r\n        isPrivate: \"\",\r\n        kitchenDetail: \"\",\r\n        image: null,\r\n        note: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        features: [],\r\n        addressDetail: \"\"\r\n    })\r\n    const [listCheckbox, setListCheckbox] = useState([])\r\n    console.log(\"xxxx propety\", input)\r\n    const handleOnChange = (event, field, option) => {\r\n        if (option === \"number\") {\r\n            let number = convertNumber(event.target.value);\r\n            let regExp = /[^0-9]/g;\r\n            let temp = number.match(regExp);\r\n            if (!temp) {\r\n                return setInput({\r\n                    ...input,\r\n                    [field]: addString(number)\r\n                });\r\n            }\r\n        } else {\r\n            setInput({\r\n                ...input,\r\n                [field]: (field === \"state\" || field === \"district\") ? option : event.target.value\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleOnSubmit = (event) => {\r\n        let form = new FormData()\r\n        event.preventDefault()\r\n        for (let item in input) {\r\n            if (item === \"image\") {\r\n                if (input[item] && input[item].length > 0) {\r\n                    input[item].forEach((el, index) => {\r\n                        form.append(item, el)\r\n                    })\r\n                }\r\n            } else {\r\n                form.append(`${item}`, input[item])\r\n            }\r\n        }\r\n        return callApi({ url: \"/api/real-estate/add-property\", data: form, checkAuth: true, token: localStorage.getItem(\"_user\") })\r\n    }\r\n    return (\r\n        <form encType=\"multipart/form-data\" onSubmit={(event) => handleOnSubmit(event)}>\r\n            <div style={{ padding: \"20px 40px 0px 40px\" }}>\r\n                <h2 style={{ fontWeight: \"bold\", fontSize: \"40px\" }}>Cho thuê nhà</h2>\r\n                <Grid container spacing={6} style={{ display: \"flex\" }}>\r\n                    <Grid item xs={7} className={classes.rightTabContainer}>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500 }}>Thông tin nhà cho thuê</div>\r\n                        <Grid container>\r\n                            {ConfigInput.propertyDescriptionInput.map(el => (\r\n                                <Grid item xs={12} key={el.label}>\r\n                                    <TextField variant=\"outlined\"\r\n                                        label={el.label}\r\n                                        type=\"text\"\r\n                                        value={input[el.nameState]}\r\n                                        onChange={(event) => handleOnChange(event, el.nameState, el.type)}\r\n                                        className={classes.textField}\r\n                                        multiline={el.label === \"Miêu tả\" ? true : false}\r\n                                        rows={el.label === \"Miêu tả\" ? 8 : 1}\r\n                                        style={{ width: \"95%\" }}>\r\n                                    </TextField>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500 }}>Thông tin nhà cho thuê</div>\r\n                        <Grid container>\r\n                            {ConfigInput.propertyPrice.map((el) => (\r\n                                <Grid item xs={6} key={el.label}>\r\n                                    {el.type === \"select\" ? (\r\n                                        <FormControl variant=\"outlined\" style={{ width: \"90%\" }}>\r\n                                            <InputLabel id={el.label}>{el.label}</InputLabel>\r\n                                            <Select\r\n                                                value={input[el.nameState] ? input[el.nameState] : \"\"}\r\n                                                onChange={(event) => handleOnChange(event, el.nameState, el.type)}\r\n                                                labelId={el.label}\r\n                                                label={el.label}\r\n                                                value={input[el.nameState] ? input[el.nameState] : \"\"}\r\n                                                style={{ borderRadius: \"10px\" }}>\r\n                                                {el.value?.map(value => {\r\n                                                    return (\r\n                                                        <MenuItem key={value} value={value}>{value}</MenuItem>\r\n                                                    )\r\n                                                })}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    ) :\r\n                                        (<TextField variant=\"outlined\"\r\n                                            label={el.label}\r\n                                            type=\"text\"\r\n                                            className={classes.textField}\r\n                                            value={input[el.nameState] ? input[el.nameState] : \"\"}\r\n                                            onChange={(event) => handleOnChange(event, el.nameState, el.type)}\r\n                                            style={{ width: \"90%\" }}>\r\n                                        </TextField>)\r\n                                    }\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500, marginTop: \"20px\" }}>Chọn loại</div>\r\n                        <Grid container>\r\n                            <Grid item xs={6}>\r\n                                <Autocomplete\r\n                                    options={ConfigInput.listState}\r\n                                    inputValue={input.state ? input.state : \"\"}\r\n                                    onInputChange={(event, value) => handleOnChange(event, \"state\", value)}\r\n                                    renderInput={(params) => <TextField  {...params} className={classes.textField} style={{ width: \"90%\" }} label=\"Tỉnh\" variant=\"outlined\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Autocomplete\r\n                                    options={ConfigInput.mapDistrict[input.state] ? ConfigInput.mapDistrict[input.state] : [\"Hãy chọn tỉnh trước\"]}\r\n                                    inputValue={input.district ? input.district : \"\"}\r\n                                    onInputChange={(event, value) => handleOnChange(event, \"district\", value)}\r\n                                    renderInput={(params) => <TextField {...params} className={classes.textField} style={{ width: \"90%\" }} label=\"Quận/Huyện\" variant=\"outlined\" />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField variant=\"outlined\"\r\n                                    label=\"Địa chỉ chi tiết\"\r\n                                    type=\"text\"\r\n                                    className={classes.textField}\r\n                                    value={input[\"addressDetail\"]}\r\n                                    style={{ width: \"90%\" }}>\r\n                                </TextField>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500, marginTop: \"20px\" }}>Chi tiết</div>\r\n                        <Grid container >\r\n                            {ConfigInput.listDetails.map((el) => (\r\n                                <Grid item xs={6} key={el.label}>\r\n                                    {el.type === \"select\" ? (\r\n                                        <FormControl variant=\"outlined\" style={{ width: \"90%\" }}>\r\n                                            <InputLabel id={el.label}>{el.label}</InputLabel>\r\n                                            <Select\r\n                                                value={input[el.nameState] ? input[el.nameState] : \"\"}\r\n                                                onChange={(event) => handleOnChange(event, el.nameState)}\r\n                                                labelId={el.label}\r\n                                                label={el.label}\r\n                                                style={{ borderRadius: \"10px\" }}>\r\n                                                {el.value?.map(value => {\r\n                                                    return (\r\n                                                        <MenuItem key={value} value={value}>{value}</MenuItem>\r\n                                                    )\r\n                                                })}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    ) :\r\n                                        (<TextField variant=\"outlined\"\r\n                                            label={el.label}\r\n                                            type=\"text\"\r\n                                            value={input[el.nameState] ? input[el.nameState] : \"\"}\r\n                                            onChange={(event) => handleOnChange(event, el.nameState, el.type)}\r\n                                            className={classes.textField}\r\n                                            style={{ width: \"90%\" }}>\r\n                                        </TextField>)\r\n                                    }\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500, marginTop: \"20px\" }}>Tiện nghi</div>\r\n                        <Grid container >\r\n                            {ConfigInput.features.map((el, index) => (\r\n                                <Grid item xs={3} key={el.label}>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                name=\"checkedB\"\r\n                                                color=\"primary\"\r\n                                                onChange={(event) => {\r\n                                                    let tempArr = [...input.features];\r\n                                                    tempArr[index] = event.target.checked ? 1 : 0;\r\n                                                    console.log(\"xxx tempArr\", tempArr)\r\n                                                    setInput({\r\n                                                        ...input,\r\n                                                        features: [...tempArr]\r\n                                                    })\r\n                                                }}\r\n                                            />\r\n                                        }\r\n                                        label={el.label}\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500, marginTop: \"20px\" }}>Chú thích của bạn</div>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <TextField variant=\"outlined\"\r\n                                    label=\"Chú thích\"\r\n                                    type=\"text\"\r\n                                    className={classes.textField}\r\n                                    multiline={true}\r\n                                    onChange={(event) => handleOnChange(event, \"note\")}\r\n                                    value={input.note}\r\n                                    rows={10}\r\n                                    style={{ width: \"95%\" }}>\r\n                                </TextField>\r\n                                <MuiPickersUtilsProvider variant=\"outlined\" utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        label=\"Date picker dialog\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        // error={true}\r\n                                    // value={selectedDate}\r\n                                    // onChange={handleDateChange}\r\n                                    // variant=\"outlined\"\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <ButtonCustom type=\"submit\" >Save</ButtonCustom>\r\n                    </Grid>\r\n                    <Grid item xs={5} style={{ padding: \"0px 24px\" }}>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            multiple={true}\r\n                            type=\"file\"\r\n                            onChange={(event) => {\r\n                                setInput({\r\n                                    ...input, image: Object.values(event.target.files)\r\n                                })\r\n                            }}\r\n                        />\r\n                        <Card style={{ borderRadius: \"20px\" }}>\r\n                            <CardActionArea style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\" }}>\r\n                                <label htmlFor=\"contained-button-file\">\r\n                                    <div style={{ fontSize: \"16px\", padding: \"20px\", borderBottom: \"1px solid #0000001f\", }}>Tải ảnh lên</div>\r\n                                    <CardMedia style={{ padding: \"20px\", maxWidth: \"90%\", marginLeft: \"auto\", marginRight: \"auto\", boxSizing: \"border-box\" }} >\r\n                                        <div style={{ display: \"flex\", border: \"1px dashed #0000001f\", padding: \"20px\" }}>\r\n                                            <img src={addFile} height=\"100px\" alt=\"add-image-icon\"></img>\r\n                                            <div >\r\n                                                <div style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>Chọn ảnh</div>\r\n                                                <div>Thả ảnh vào đây hoặc là ấn vào đây để chọn ảnh từ máy của bạn</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </CardMedia>\r\n                                </label>\r\n                                <span style={{ fontSize: \"14px\", marginLeft: \"40px\", marginBottom: \"16px\" }}>Chú thích : Bạn phải đăng ít nhất 3 ảnh </span>\r\n\r\n                                {input.image ? <div style={{ margin: \"20px 40px\", display: \"flex\", flexDirection: \"column\" }}>{input.image.length > 0 ? input.image.map(el => <div key={el.name} style={{ marginTop: \"16px\" }}>{el.name}</div>) : null}</div> : null}\r\n                            </CardActionArea>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default AddProperty","D:\\Study\\web-project-js\\client\\src\\ConfigInput.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\ButtonCustom.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\Header.js",["190"],"import React from \"react\";\r\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Config from \"../Config\";\r\nconst useStyles = makeStyles({\r\n    countNotify: {\r\n        position: \"absolute\",\r\n        top: \"-8px\",\r\n        right: \"-4px\",\r\n        fontSize: \"16px\",\r\n        backgroundColor: \"#ae8c63\",\r\n        color: \"white\",\r\n        borderRadius: \"50%\",\r\n        width: \"26px\",\r\n        height: \"26px\",\r\n        textAlign: \"center\",\r\n    }\r\n})\r\nconst Header = ({ image }) => {\r\n    console.log(\"image\", image)\r\n    const classes = useStyles()\r\n    return (\r\n        <div style={{ display: \"flex\", padding: \"20px 60px\", backgroundColor: \"#fff\" }}>\r\n            <div>\r\n                <img src=\"https://demo5.wpresidence.net/wp-content/uploads/2020/07/demo5_black.png\" alt=\"12\"></img>\r\n            </div>\r\n            <div style={{ display: \"flex\", marginLeft: \"auto\", marginRight: \"20px\", alignItems: \"center\", position: \"relative\", cursor: \"pointer\" }}>\r\n                <div className={classes.countNotify}>1</div>\r\n                <img src={image ? (Config.BASE_URL + \"/api/user\" + image) : \"https://demo5.wpresidence.net/wp-content/themes/wpresidence/img/default_user_small.png\"} alt=\"avatar\" style={{ width: \"45px\", height: \"45px\", borderRadius: \"50%\", border: \"1px solid red\" }}></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Header","D:\\Study\\web-project-js\\client\\src\\components\\Profile.js",["191","192"],"import { Button, Grid, makeStyles, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ConfigInput from \"../ConfigInput\";\r\nimport { getUserInfo } from \"../redux/actions/user\";\r\nimport ButtonCustom from \"./ButtonCustom\";\r\nimport Modal from \"./Modal\";\r\nimport axios from \"axios\";\r\nimport { callApi } from \"../axios\";\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        \"& .MuiOutlinedInput-root\": {\r\n            borderRadius: \"10px\"\r\n        },\r\n        marginBottom: \"32px\",\r\n    },\r\n    rightTabContainer: {\r\n        padding: \"40px\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"20px\"\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    }\r\n})\r\nconst Profile = ({ getUserInfo = () => { }, userReducer, status }) => {\r\n    const classes = useStyles();\r\n    const [input, setInput] = useState({\r\n        email: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        cardId: \"\",\r\n        address: \"\",\r\n        facebook: \"\",\r\n        zalo: \"\",\r\n        insta: \"\",\r\n        image: null\r\n    })\r\n    useEffect(() => {\r\n        if (userReducer.infoUser) {\r\n            setInput({ ...input, ...userReducer.infoUser })\r\n        } else {\r\n            getUserInfo()\r\n        }\r\n    }, [getUserInfo, userReducer.infoUser])\r\n    const handleOnChange = (event, field) => {\r\n        return setInput({\r\n            ...input,\r\n            [field]: event.target.value\r\n        })\r\n    }\r\n    if (userReducer.loading) {\r\n        return <Modal show={true}></Modal>\r\n    }\r\n    const handleUpdateProfile = (event) => {\r\n        event.preventDefault();\r\n        let form = new FormData();\r\n        for (let item in input) {\r\n            form.append(`${item}`, input[item])\r\n        }\r\n        return callApi({ url: \"/api/user/update-profile\", data: form, checkAuth: true, token: localStorage.getItem(\"_user\") })\r\n    }\r\n    console.log(\"123 input\", status)\r\n    return (\r\n        <div style={{ padding: \"20px 40px 0px 40px\" }}>\r\n            <h2 style={{ fontWeight: \"bold\", fontSize: \"40px\" }}>Thông tin cá nhân</h2>\r\n            <form encType=\"multipart/form-data\" onSubmit={(event) => handleUpdateProfile(event)}>\r\n                <Grid container style={{ marginBottom: \"60px\" }}>\r\n                    <Grid item xs={8} className={classes.rightTabContainer}>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500 }}>Thông tin liên lạc</div>\r\n                        <Grid container>\r\n                            {ConfigInput.listInforProfile.map(el => (\r\n                                <Grid item xs={6} key={el.label}>\r\n                                    <TextField variant=\"outlined\"\r\n                                        label={el.label}\r\n                                        type={el.type}\r\n                                        value={input[el.stateName] ? input[el.stateName] : \"\"}\r\n                                        disabled={status ? true : false}\r\n                                        className={classes.textField}\r\n                                        style={{ width: \"90%\" }}\r\n                                        onChange={(event) => handleOnChange(event, el.stateName)}>\r\n                                    </TextField>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                        <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500 }}>Mạng xã hội</div>\r\n                        <Grid container>\r\n                            {ConfigInput.listSocialMedia.map(el => (\r\n                                <Grid item xs={6} key={el.label}>\r\n                                    <TextField variant=\"outlined\"\r\n                                        label={el.label}\r\n                                        type={el.type}\r\n                                        value={input[el.stateName] ? input[el.stateName] : \"\"}\r\n                                        onChange={(event) => handleOnChange(event, el.stateName)}\r\n                                        className={classes.textField}\r\n                                        style={{ width: \"90%\" }}>\r\n                                    </TextField>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                        <ButtonCustom type=\"submit\" >Update Profile</ButtonCustom>\r\n                    </Grid>\r\n                    <Grid item xs={3} style={{ backgroundColor: \"#fff\", marginLeft: \"auto\", marginRight: \"auto\", borderRadius: \"20px\", height: \"100%\", padding: \"16px\" }}>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"button-file\"\r\n                            type=\"file\"\r\n                            onChange={(event) => {\r\n                                setInput({ ...input, image: event.target.files[0] })\r\n                            }}\r\n                        />\r\n                        <div style={{ margin: \"8px 0px 16px 8px\", fontSize: \"18px\", fontWeight: 600 }}>Ảnh</div>\r\n\r\n                        <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\r\n                            <img src=\"https://demo5.wpresidence.net/wp-content/themes/wpresidence/img/default_user.png\" alt=\"avatar-3\" style={{ marginBottom: \"32px\", width: \"100%\", height: \"auto\" }}></img>\r\n                            <label htmlFor=\"button-file\">\r\n                                <Button component=\"div\" style={{ textTransform: \"none\", backgroundColor: \"#ae8c63\", color: \"#fff\", padding: \"16px 24px\", borderRadius: \"10px\", width: \"100%\" }}\r\n                                    variant=\"contained\" >Tải ảnh lên</Button>\r\n                            </label>\r\n                            {input.image ? <div style={{ margin: \"20px 40px\", display: \"flex\", flexDirection: \"column\" }}>{input.image.name}</div> : null}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            <Grid container >\r\n                <Grid item xs={8} style={{ padding: \"32px\", backgroundColor: \"#fff\", borderRadius: \"20px\", marginTop: \"24px\" }}>\r\n                    <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: 500 }}>Thông tin liên lạc</div>\r\n                    <Grid container >\r\n                        {ConfigInput.listInputChangePassowrd.map(el => (\r\n                            <Grid key={el.label} item xs={el.label === \"Mật khẩu cũ\" ? 12 : 6}>\r\n                                <TextField variant=\"outlined\"\r\n                                    label={el.label}\r\n                                    type={el.type}\r\n                                    className={classes.textField}\r\n                                    style={{ width: el.label === \"Mật khẩu cũ\" ? \"95%\" : \"90%\" }}>\r\n                                </TextField>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                    <ButtonCustom>Save</ButtonCustom>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userReducer: state.userReducer\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getUserInfo: () => dispatch(getUserInfo())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)","D:\\Study\\web-project-js\\client\\src\\components\\ListItem.js",["193"],"import { Container, Grid, makeStyles, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport test1 from \"../resources/images/test1.jpg\";\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport BathtubIcon from '@material-ui/icons/Bathtub';\r\nimport { connect } from \"react-redux\"\r\nimport { addFavorites, getListLandingPage } from \"../redux/actions/action\";\r\nimport { Size } from \"../components/Icons\"\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        marginTop: \"20px\",\r\n    },\r\n    imageContainer: {\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n    },\r\n    img: {\r\n        transition: \"all 1s ease\",\r\n        filter: \"brightness(80%)\",\r\n        zIndex: 5\r\n    },\r\n    itemContainer: {\r\n        transition: \"all 1s\",\r\n        marginTop: \"20px\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\": {\r\n            borderRadius: \"2px\",\r\n            boxShadow: \"0 10px 31px 0 rgba(7,152,255,0.09)\",\r\n            marginTop: \"8px\",\r\n            \"& > div > img\": {\r\n                transform: \"scale(1.1)\",\r\n                filter: \"brightness(65%)\",\r\n            },\r\n            \"& > div > div\": {\r\n                transition: \"color 0.3s ease-out\",\r\n                color: \"#ae8c63\",\r\n            }\r\n        },\r\n    },\r\n    itemName: {\r\n        fontSize: \"20px\",\r\n        fontWeight: 600\r\n    },\r\n    price: {\r\n        color: \"#ae8c63\",\r\n    },\r\n    description: {\r\n        fontSize: \"13px\",\r\n        marginTop: \"4px\"\r\n    },\r\n    backgroundImage: {\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        width: \"100%\",\r\n        height: \"auto\",\r\n        opacity: \"0.6\"\r\n    }\r\n});\r\nconst ListItem = ({ getListLandingPage = () => { }, realEstateReducer, addFavorites }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.between(0, 780));\r\n    useEffect(() => {\r\n        getListLandingPage();\r\n    }, [getListLandingPage])\r\n    return (\r\n        <Container className={classes.container} >\r\n            <h1 style={{ textAlign: \"center\", color: \"#222222\" }}>Một số bất động sản</h1>\r\n            <Grid container spacing={6}>\r\n                {realEstateReducer.listRealEstate.map(el => {\r\n                    return (\r\n                        <Grid item xs={isMobile ? 12 : 4} key={el.id}>\r\n                            <div className={classes.itemContainer}>\r\n                                <div style={{ width: \"100%\" }} className={classes.imageContainer}>\r\n                                    <img src={test1} style={{ width: \"100%\", height: \"auto\" }} className={classes.img} alt=\"temp\"></img>\r\n                                    <div style={{ backgroundColor: \"#ae8c63d9\", color: \"#fff\", position: \"absolute\", top: \"16px\", right: \"16px\", padding: \"4px 15px\" }}>\r\n                                        <div style={{ fontSize: \"12px\", textAlign: \"center\" }}>Chung cư</div>\r\n                                    </div>\r\n                                    {el.features && el.features.length > 0 ? (\r\n                                        <div style={{ backgroundColor: \"#f1bf7fd9\", color: \"#fff\", position: \"absolute\", top: \"16px\", left: \"16px\", padding: \"4px 15px\" }}>\r\n                                            <div style={{ fontSize: \"12px\", textAlign: \"center\" }}>Nội thất</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                    <div style={{ position: \"absolute\", bottom: \"16px\", left: \"16px\", color: \"#fff\", width: \"100%\", display: \"flex\", alignItems: \"center\" }}>\r\n                                        <div style={{ display: \"flex\", alignItems: \"center\", }}>\r\n                                            <LocationOnIcon style={{ fontSize: \"18px\", color: \"#fff\", }}></LocationOnIcon>\r\n                                            <span style={{ marginLeft: \"4px\", fontSize: \"13px\", fontWeight: 600 }}>{el.district}, {el.state}</span>\r\n                                        </div>\r\n                                        <div style={{ marginLeft: \"auto\", marginRight: \"40px\", display: \"flex\", alignItems: \"center\" }}>\r\n                                            <PhotoCameraIcon style={{ color: \"#fff\", fontSize: \"18px\" }}></PhotoCameraIcon>\r\n                                            <span style={{ marginLeft: \"4px\", fontSize: \"14px\", fontWeight: 600 }}>{el.imagePath.length}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ display: \"flex\", flexDirection: \"column\", padding: \"16px 24px\", backgroundColor: \"#fff\" }}>\r\n                                    <div className={classes.itemName}>{el.title}</div>\r\n                                    <span className={classes.price}>{el.price} VND</span>\r\n                                    <span className={classes.description}>{el.description.length > 60 ? el.description.substring(0, 60) + \"...\" : el.description.substring(0, 60)}</span>\r\n                                    <div style={{ display: \"flex\", marginTop: \"8px\" }}>\r\n                                        <div style={{ display: \"flex\", alignItems: \"center\", marginRight: \"16px\" }}>\r\n                                            <HotelIcon style={{ color: \"#5c727d\", fontSize: \"20px\", color: \"#5c727d\" }}></HotelIcon>\r\n                                            <span style={{ marginLeft: \"8px\", fontSize: \"14px\" }}>{el.bedroom}</span>\r\n                                        </div>\r\n                                        <div style={{ display: \"flex\", alignItems: \"center\", marginRight: \"16px\", color: \"#5c727d\" }}>\r\n                                            <BathtubIcon style={{ fontSize: \"20px\" }}></BathtubIcon>\r\n                                            <span style={{ marginLeft: \"8px\", fontSize: \"14px\", color: \"#5c727d\" }}>{el.bathroom}</span>\r\n                                        </div>\r\n                                        <div style={{ display: \"flex\", alignItems: \"center\", marginRight: \"16px\", color: \"#5c727d\" }}>\r\n                                            <Size style={{ fontSize: \"20px\" }}></Size>\r\n                                            <span style={{ marginLeft: \"8px\", fontSize: \"14px\" }}>{el.size} m2</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr></hr>\r\n                                    <div style={{ height: \"100%\", display: \"flex\", alignItems: \"center\" }}>\r\n                                        <img src=\"https://demo5.wpresidence.net/wp-content/uploads/2014/05/person3-120x120.jpg\" style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }} alt=\"avatar\" ></img>\r\n                                        <span style={{ marginLeft: \"8px\" }}>Maria Barlow</span>\r\n                                        <div style={{ position: \"relative\", marginLeft: \"auto\", display: \"flex\" }}>\r\n                                            <div style={{ border: \"1px solid #eef3f6\", marginRight: \"8px\", padding: \"4px\", height: \"30px\", width: \"30px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                                                <ShareIcon style={{ color: \"#c2cbd9\", fontSize: \"14px\" }}></ShareIcon>\r\n                                            </div>\r\n                                            <div style={{ border: \"1px solid #eef3f6\", padding: \"4px\", height: \"30px\", width: \"30px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }} onClick = {() => addFavorites(el.id)}>\r\n                                                <FavoriteBorderIcon style={{ color: \"#c2cbd9\", fontSize: \"14px\" }}></FavoriteBorderIcon>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Grid>\r\n                    )\r\n                })}\r\n            </Grid>\r\n\r\n        </Container >\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        realEstateReducer: state.realEstateReducer\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getListLandingPage: () => dispatch(getListLandingPage()),\r\n        addFavorites: (id) => dispatch(addFavorites(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem)","D:\\Study\\web-project-js\\client\\src\\pages\\Account.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\Favorites.js",[],"D:\\Study\\web-project-js\\client\\src\\index.js",[],"D:\\Study\\web-project-js\\client\\src\\reportWebVitals.js",["194"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","D:\\Study\\web-project-js\\client\\src\\App.js",[],"D:\\Study\\web-project-js\\client\\src\\pages\\LandingPage.js",["195"],"D:\\Study\\web-project-js\\client\\src\\components\\ControlTabItem.js",[],"D:\\Study\\web-project-js\\client\\src\\Config.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\PrivateRoute.js",[],"D:\\Study\\web-project-js\\client\\src\\pages\\SignIn.js",[],"D:\\Study\\web-project-js\\client\\src\\pages\\SignUp.js",["196","197"],"import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n// import '../resources/scss/auth.css'\r\nimport { TextField, makeStyles, InputAdornment, IconButton, Checkbox, FormControlLabel, Button } from '@material-ui/core';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useHistory } from 'react-router';\r\nconst useStyle = makeStyles({\r\n    textField: {\r\n        marginRight: \"16px\",\r\n        width: \"calc((100% - 16px)/2)\"\r\n    },\r\n    buttonGoogle: {\r\n        border: \"1px solid #908e8e\",\r\n        marginBottom: \"8px\"\r\n    },\r\n    rootSignUp: {\r\n        width: \"400px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        margin: \"120px auto\",\r\n    },\r\n    circle: {\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n        backgroundColor: \"rgb(220, 0, 78)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: \"50%\"\r\n    },\r\n    lockIcon: {\r\n        width: \"24px\",\r\n        height: \"24px\",\r\n        color: \"white\",\r\n    },\r\n    rootSignIn: {\r\n        width: \"400px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        margin: \"120px auto\",\r\n    }\r\n})\r\nconst SignUp = () => {\r\n    const classes = useStyle();\r\n    const history = useHistory();\r\n    const [showPass, setShowPass] = useState(false);\r\n    const [input, setInput] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n    })\r\n    const [error, setError] = useState({\r\n        errorMessage: \"\",\r\n        type: \"\"\r\n    })\r\n    console.log(\"xxxxx \", error)\r\n    const handleOnChangeInput = (event, field) => {\r\n        if (error.type.length > 0) {\r\n            setError({\r\n                errorMessage: \"\",\r\n                type: \"\"\r\n            })\r\n        }\r\n        setInput({\r\n            ...input,\r\n            [field]: event.target.value\r\n        })\r\n\r\n    }\r\n    const handleResign = () => {\r\n        return axios.post(\"http://localhost:8080/api/user/sign-up\", input)\r\n            .then((res) => {\r\n                console.log(\"xxxxx status\", res.data)\r\n                if (res.status === 200) {\r\n                    history.push(\"/sign-in\");\r\n                    window.location.reload()\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"fucking error\", err.response)\r\n                if (err.response.status === 400) {\r\n                    return setError({\r\n                        errorMessage: err.response.data.errorMessage,\r\n                        type: err.response.data.errorType\r\n                    })\r\n                }\r\n            })\r\n\r\n    }\r\n    const handleClickShowPass = () => {\r\n        setShowPass(!showPass)\r\n    }\r\n    return (\r\n        <div className={classes.rootSignUp}>\r\n            <div className={classes.circle}>\r\n                <LockOutlinedIcon className={classes.lockIcon}></LockOutlinedIcon>\r\n            </div>\r\n            <h1 style={{ marginTop: \"8px\", fontSize: \"24px\", fontWeight: 400, color: \"\" }}>Sign Up</h1>\r\n            <div style={{ marginBottom: \"24px\", display: \"flex\", width: \"100%\" }}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Họ\"\r\n                    type=\"text\"\r\n                    className={classes.textField}\r\n                    onChange={(event) => handleOnChangeInput(event, \"firstName\")}\r\n                    error={error.type === \"firstName\" ? true : false}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Tên\"\r\n                    type=\"text\"\r\n                    style={{ width: \"calc((100% - 16px)/2)\" }}\r\n                    onChange={(event) => handleOnChangeInput(event, \"lastName\")}\r\n                    error={error.type === \"lastName\" ? true : false}\r\n                />\r\n            </div>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                fullWidth={true}\r\n                label=\"Tên đăng nhập\"\r\n                type=\"text\"\r\n                style={{ marginBottom: \"24px\" }}\r\n                onChange={(event) => handleOnChangeInput(event, \"username\")}\r\n                error={error.type === \"username\" ? true : false}\r\n            />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                fullWidth={true}\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                style={{ marginBottom: \"24px\" }}\r\n                onChange={(event) => handleOnChangeInput(event, \"email\")}\r\n                error={error.type === \"email\" ? true : false}\r\n            />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                fullWidth={true}\r\n                label=\"Mật Khẩu\"\r\n                type={showPass ? \"text\" : \"password\"}\r\n                style={{ marginBottom: \"16px\" }}\r\n                onChange={(event) => handleOnChangeInput(event, \"password\")}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={() => handleClickShowPass()}>\r\n                                {showPass ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n                error={error.type === \"password\" ? true : false}\r\n            />\r\n\r\n            { error.type.length > 0 ? <Alert severity=\"error\" style={{ marginBottom: \"16px\", marginRight: \"auto\", width: \"100%\" }}>{error.errorMessage}</Alert> : null}\r\n            <Button fullWidth={true} variant=\"contained\" color=\"primary\" style={{ marginBottom: \"16px\" }} onClick={() => handleResign()}>SIGN UP</Button>\r\n            <a href=\"/sign-in\" style={{ marginLeft: \"auto\", color: \"#1976d2\", cursor: \"pointer\", textDecoration: \"none\" }}>Đã có tài khoản? Đăng nhập</a>\r\n        </div >\r\n    )\r\n}\r\nexport default SignUp","D:\\Study\\web-project-js\\client\\src\\redux\\actions\\auth.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\actions\\type.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\store.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\index.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\index.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\user.js",["198","199","200"],"import { call, put, take } from 'redux-saga/effects';\r\nimport { callApi } from '../../axios';\r\nimport * as Types from \"../actions/type\"\r\nimport { getAdminInfoSuccess, getListAccountFailed, getListAccountSuccess, getUserInfoFailed, getUserInfoSuccess } from '../actions/user';\r\nfunction getUserApi(token) {\r\n    return callApi({ method: \"get\", token: token, checkAuth: true, url: \"/api/user/user-info\" })\r\n}\r\nfunction getAdminInfoApi() {\r\n    return callApi({ url: \"/admin/get-info\" })\r\n}\r\nfunction getListAccountApi(token) {\r\n    return callApi({ url: \"/api/user/get-list-account\", token: token, checkAuth: true })\r\n}\r\nfunction* getUserSaga() {\r\n    while (true) {\r\n        let action = yield take(Types.GET_USER_INFO);\r\n        try {\r\n            let token = localStorage.getItem(\"_user\");\r\n            let user = yield call(getUserApi, token);\r\n            console.log(\"xxxx user\", user)\r\n            if (user !== \"failed\") {\r\n                yield put(getUserInfoSuccess(user))\r\n            }\r\n        }\r\n        catch (e) {\r\n            yield put(getUserInfoFailed(e))\r\n        }\r\n    }\r\n}\r\nfunction* getAdminInfo() {\r\n    while (true) {\r\n        let action = yield take(Types.GET_ADMIN_INFO);\r\n        try {\r\n            let result = yield call(getAdminInfoApi);\r\n            yield put(getAdminInfoSuccess(result))\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n}\r\nfunction* getListAccountSaga() {\r\n    while (true) {\r\n        try {\r\n            let action = yield take(Types.GET_LIST_ACCOUNT);\r\n            let token = localStorage.getItem(\"_user\");\r\n            if (token) {\r\n                let response = yield call(getListAccountApi, token)\r\n                if (response) {\r\n                    yield put(getListAccountSuccess(response))\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            yield put(getListAccountFailed(error))\r\n        }\r\n    }\r\n}\r\nexport const userSaga = [\r\n    getUserSaga(),\r\n    getAdminInfo(),\r\n    getListAccountSaga()\r\n]","D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\auth.js",["201"],"import { call, put, take } from 'redux-saga/effects';\r\nimport * as Types from \"../actions/type\";\r\nimport { callApi } from \"../../axios/index\"\r\nimport { setImagePathAndStatus, setIsAuth } from '../actions/action';\r\nfunction checkAuthApi(token) {\r\n    return callApi({ url: \"/api/user/check-auth\", token: token, checkAuth: true })\r\n}\r\nfunction* checkIsLoginSaga() {\r\n    while (true) {\r\n        try {\r\n            let action = yield take(Types.CHECK_IS_LOG_IN);\r\n            let token = localStorage.getItem(\"_user\");\r\n            if (token) {\r\n                console.log(\"123 running\")\r\n                let temp = yield call(checkAuthApi, token);\r\n                console.log(\"xxx123\", temp)\r\n                if (temp.message !== \"success\") {\r\n                    yield put(setIsAuth(false))\r\n                } else {\r\n                    yield put(setIsAuth(true));\r\n                    yield put(setImagePathAndStatus(temp))\r\n                }\r\n            } else {\r\n                yield put(setIsAuth(false))\r\n            }\r\n        }\r\n        catch (e) {\r\n            yield put(setIsAuth(false))\r\n        }\r\n    }\r\n\r\n}\r\nexport const authSaga = [\r\n    checkIsLoginSaga(),\r\n]","D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\auth.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\user.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\admin.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\actions\\user.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\actions\\action.js",[],"D:\\Study\\web-project-js\\client\\src\\axios\\index.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\AuthRoute.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\Modal.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\AlertDialog.js",[],"D:\\Study\\web-project-js\\client\\src\\utils.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\ListProperty.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\actions\\realEstate.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\reducer\\realEstate.js",[],"D:\\Study\\web-project-js\\client\\src\\redux\\sagas\\realEstate.js",["202","203"],"import { call, put, take } from 'redux-saga/effects';\r\nimport * as Types from \"../actions/type\";\r\nimport { callApi } from \"../../axios/index\"\r\nimport { addFavoritesFailed, addFavoritesSuccess, getListFavoritesFailed, getListFavoritesSuccess, getListLandingPageFailed, getListLandingPageSuccess } from '../actions/action';\r\nfunction getListLandingPageApi() {\r\n    return callApi({ url: \"/api/real-estate/get-list-landingpage\", method: \"get\" })\r\n}\r\nfunction addFavoritesApi(token, id) {\r\n    return callApi({ url: \"/api/user/add-favorites\", token: token, checkAuth: true, data: { id: id } })\r\n}\r\nfunction getListFavoritesApi(token) {\r\n    return callApi({ url: \"/api/real-estate/get-list-favorites\", token: token, checkAuth: true })\r\n}\r\nfunction* getListLandingPageSaga() {\r\n    while (true) {\r\n        try {\r\n            let action = yield take(Types.GET_LIST_LADNING_PAGE);\r\n            let listRealEstate = yield call(getListLandingPageApi);\r\n            if (listRealEstate) {\r\n                yield put(getListLandingPageSuccess(listRealEstate))\r\n            }\r\n        }\r\n        catch (e) {\r\n            yield put(getListLandingPageFailed(e))\r\n        }\r\n    }\r\n}\r\nfunction* addFavorites() {\r\n    while (true) {\r\n        try {\r\n            let action = yield take(Types.ADD_FAVORITES);\r\n            let id = action.id\r\n            console.log(\"id\", id)\r\n            let token = localStorage.getItem(\"_user\");\r\n            if (id && token) {\r\n                let response = yield call(addFavoritesApi, token, id)\r\n                if (response === \"success\") {\r\n                    yield put(addFavoritesSuccess(id))\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            yield put(addFavoritesFailed(e))\r\n        }\r\n    }\r\n}\r\nfunction* getListFavorites() {\r\n    while (true) {\r\n        try {\r\n            let action = yield take(Types.GET_LIST_FAVORITES);\r\n            let token = localStorage.getItem(\"_user\");\r\n            let response = yield call(getListFavoritesApi, token)\r\n            if (response && response.length > 0) {\r\n                yield put(getListFavoritesSuccess(response))\r\n            }\r\n        }\r\n        catch (error) {\r\n            yield put(getListFavoritesFailed(error))\r\n        }\r\n    }\r\n}\r\nexport const realEstateSaga = [\r\n    getListLandingPageSaga(),\r\n    addFavorites(),\r\n    getListFavorites()\r\n]","D:\\Study\\web-project-js\\client\\src\\components\\Icons.js",[],"D:\\Study\\web-project-js\\client\\src\\components\\CustomTable.js",["204"],"// import { Paper, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\r\n// import React from \"react\";\r\n// import { connect } from \"react-redux\";\r\n\r\n// const Table = ({ listRealEstate }) => {\r\n//     return (\r\n//         <div>\r\n//             <Paper >\r\n//                 {/* <Table > */}\r\n//                     {/* <TableHead>\r\n//                         <TableRow>\r\n//                             <TableCell>Dessert (100g serving)</TableCell>\r\n//                             <TableCell align=\"right\">Calories</TableCell>\r\n//                             <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n//                             <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n//                             <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n//                         </TableRow>\r\n//                     </TableHead>\r\n//                     <TableBody>\r\n//                         {rows.map((row) => (\r\n//                         <TableRow key={row.name}>\r\n//                             <TableCell component=\"th\" scope=\"row\">\r\n//                                 {row.name}\r\n//                             </TableCell>\r\n//                             <TableCell align=\"right\">{row.calories}</TableCell>\r\n//                             <TableCell align=\"right\">{row.fat}</TableCell>\r\n//                             <TableCell align=\"right\">{row.carbs}</TableCell>\r\n//                             <TableCell align=\"right\">{row.protein}</TableCell>\r\n//                         </TableRow>\r\n//                     ))}\r\n//                     </TableBody> */}\r\n//                 {/* </Table> */}\r\n//             </Paper>\r\n//         </div>\r\n\r\n\r\n//     )\r\n// }\r\n// const mapStateToProps = () => {\r\n//     return {\r\n\r\n//     }\r\n// }\r\n// const mapDispatchToProps = () => {\r\n//     return {}\r\n// }\r\n// export default Table\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ButtonCustom from './ButtonCustom';\r\nimport { Button } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    tableContainer: {\r\n        borderRadius: \"20px\",\r\n        padding: \"0px 20px\"\r\n    }\r\n\r\n});\r\nlet customRows = [\r\n    { id: \"12333\", phone: \"12333123\", cardId: \"123112323\", address: \"test address\" },\r\n    { id: \"12333\", phone: \"12333123\", cardId: \"123112323\", address: \"test address\" },\r\n    { id: \"12333\", phone: \"12333123\", cardId: \"123112323\", address: \"test address\" },\r\n\r\n]\r\nconst CustomTable = ({ rows }) => {\r\n    console.log(rows, \"xxx test1\")\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer className={classes.tableContainer} component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"left\">Id</TableCell>\r\n                        <TableCell align=\"left\">Số điện thoại</TableCell>\r\n                        <TableCell align=\"left\">Số chứng minh thư</TableCell>\r\n                        <TableCell align=\"left\">Địa chi</TableCell>\r\n                        <TableCell align=\"center\">Hành động</TableCell>\r\n                    </TableRow>\r\n\r\n                </TableHead>\r\n                <TableBody>\r\n                    {customRows && customRows.length > 0 ? customRows.map(el => {\r\n                        return (\r\n                            <TableRow key={el.id}>\r\n                                <TableCell align=\"left\">\r\n                                    {el.id}\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">{el.phone}</TableCell>\r\n                                <TableCell align=\"left\">{el.cardId}</TableCell>\r\n                                <TableCell align=\"left\" color=\"#ae8c63\">{el.address}</TableCell>\r\n                                <TableCell align=\"center\" >\r\n                                    <Button color=\"primary\" variant=\"contained\" style={{ marginRight: \"16px\" }}>Duyệt tài khoản</Button>\r\n                                    <Button color=\"secondary\" variant=\"contained\">Từ chối</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )\r\n                    }) : null}\r\n\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\nexport default CustomTable","D:\\Study\\web-project-js\\client\\src\\components\\ListAccount.js",["205"],"import { TableContainer } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getListAccount } from \"../redux/actions/user\";\r\nimport CustomTable from \"./CustomTable\";\r\nconst ListAccount = ({ userReducer, getListAccount }) => {\r\n    useEffect(() => {\r\n        getListAccount()\r\n    }, [getListAccount])\r\n    return (\r\n        <div style={{ padding: \"20px 40px 0px 40px\" }}>\r\n            <h2 style={{ fontWeight: \"bold\", fontSize: \"40px\" }}>Duyệt tài khoản</h2>\r\n            <CustomTable ></CustomTable>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userReducer: state.userReducer\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getListAccount: () => dispatch(getListAccount())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListAccount)",{"ruleId":"206","severity":1,"message":"207","line":11,"column":180,"nodeType":"208","endLine":11,"endColumn":194},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":52,"column":12,"nodeType":"215","messageId":"216","endLine":52,"endColumn":24},{"ruleId":"213","severity":1,"message":"217","line":52,"column":26,"nodeType":"215","messageId":"216","endLine":52,"endColumn":41},{"ruleId":"206","severity":1,"message":"207","line":124,"column":49,"nodeType":"208","endLine":124,"endColumn":103},{"ruleId":"218","severity":1,"message":"219","line":279,"column":45,"nodeType":"220","endLine":279,"endColumn":100},{"ruleId":"213","severity":1,"message":"221","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":37},{"ruleId":"213","severity":1,"message":"222","line":8,"column":8,"nodeType":"215","messageId":"216","endLine":8,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":46,"column":8,"nodeType":"225","endLine":46,"endColumn":43,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":106,"column":101,"nodeType":"229","messageId":"230","endLine":106,"endColumn":106},{"ruleId":"213","severity":1,"message":"231","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":23},{"ruleId":"213","severity":1,"message":"232","line":1,"column":33,"nodeType":"215","messageId":"216","endLine":1,"endColumn":37},{"ruleId":"213","severity":1,"message":"233","line":5,"column":61,"nodeType":"215","messageId":"216","endLine":5,"endColumn":69},{"ruleId":"213","severity":1,"message":"234","line":5,"column":71,"nodeType":"215","messageId":"216","endLine":5,"endColumn":87},{"ruleId":"213","severity":1,"message":"235","line":16,"column":13,"nodeType":"215","messageId":"216","endLine":16,"endColumn":19},{"ruleId":"213","severity":1,"message":"235","line":32,"column":13,"nodeType":"215","messageId":"216","endLine":32,"endColumn":19},{"ruleId":"213","severity":1,"message":"235","line":44,"column":17,"nodeType":"215","messageId":"216","endLine":44,"endColumn":23},{"ruleId":"213","severity":1,"message":"235","line":11,"column":17,"nodeType":"215","messageId":"216","endLine":11,"endColumn":23},{"ruleId":"213","severity":1,"message":"235","line":17,"column":17,"nodeType":"215","messageId":"216","endLine":17,"endColumn":23},{"ruleId":"213","severity":1,"message":"235","line":50,"column":17,"nodeType":"215","messageId":"216","endLine":50,"endColumn":23},{"ruleId":"213","severity":1,"message":"236","line":57,"column":8,"nodeType":"215","messageId":"216","endLine":57,"endColumn":20},{"ruleId":"213","severity":1,"message":"237","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":24},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'listCheckbox' is assigned a value but never used.","Identifier","unusedVar","'setListCheckbox' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'NotificationsNoneOutlinedIcon' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'input'. Either include it or remove the dependency array. You can also do a functional update 'setInput(i => ...)' if you only need 'input' in the 'setInput' call.","ArrayExpression",["240"],"no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","'ReportHandler' is defined but never used.","'Grid' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'action' is assigned a value but never used.","'ButtonCustom' is defined but never used.","'TableContainer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},"Update the dependencies array to be: [getUserInfo, input, userReducer.infoUser]",{"range":"243","text":"244"},[1305,1340],"[getUserInfo, input, userReducer.infoUser]"]